// Generated by CoffeeScript 1.3.3
(function() {
  var GMap, module,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  module = angular.module("myApp.services", []);

  GMap = (function() {

    function GMap(options) {
      this.onTypeChange = __bind(this.onTypeChange, this);

      this.onZoomChange = __bind(this.onZoomChange, this);

      this.onCenterChanged = __bind(this.onCenterChanged, this);

      this.resizeMapEl = __bind(this.resizeMapEl, this);

      var addListener, lat, ll, lng, q;
      this.rootScope = options.rootScope;
      this.location = options.location;
      q = this.location.search().q;
      if (q) {
        ll = q.split(',');
        lat = ll[0];
        lng = ll[1];
        this.center = {
          lat: lat,
          lng: lng
        };
      } else {
        this.center = options.center;
      }
      this.zoom = parseInt(this.location.search().z) || options.zoom;
      this.mapType = this.location.search().t || options.mapType;
      this.navBarHeight = options.navBarHeight;
      this.win = $(window);
      this.mapEl = $("#map");
      this.mapTypes = {
        m: 'roadmap',
        h: 'hybrid'
      };
      ({
        mapTypeControl: true,
        mapTypeControlOptions: {
          style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
          position: google.maps.ControlPosition.TOP_RIGHT,
          mapTypeIds: [google.maps.MapTypeId.ROADMAP, google.maps.MapTypeId.HYBRID]
        },
        panControl: false,
        panControlOptions: {
          position: google.maps.ControlPosition.TOP_RIGHT
        },
        streetViewControl: false,
        streetViewControlOptions: {
          position: google.maps.ControlPosition.LEFT_TOP
        },
        zoomControl: true,
        zoomControlOptions: {
          style: google.maps.ZoomControlStyle.LARGE,
          position: google.maps.ControlPosition.LEFT_TOP
        }
      });
      this.mapEl.hide();
      this.resizeMapEl();
      this.win.resize(this.resizeMapEl);
      console.log(google.maps.MapTypeId.ROADMAP);
      this.map = new google.maps.Map(this.mapEl[0], {
        zoom: this.zoom,
        center: new google.maps.LatLng(this.center.lat, this.center.lng),
        mapTypeId: this.mapTypes[this.mapType]
      });
      addListener = google.maps.event.addListener;
      addListener(this.map, 'center_changed', this.onCenterChanged);
      addListener(this.map, 'maptypeid_changed', this.onTypeChange);
      addListener(this.map, 'zoom_changed', this.onZoomChange);
      this.rootScope.mapCenter = this.center;
      this.rootScope.mapZoom = this.zoom;
      this.rootScope.mapType = this.mapType;
      this.setLocationPath();
    }

    GMap.prototype.setLocationPath = function() {};

    GMap.prototype.resizeMapEl = function() {
      return this.mapEl.css('height', this.win.height() - this.navBarHeight);
    };

    GMap.prototype.onCenterChanged = function() {
      var center;
      center = this.map.getCenter();
      this.center.lat = center.lat();
      this.center.lng = center.lng();
      $('#crosshairlat').html(this.center.lat);
      $('#crosshairlng').html(this.center.lng);
      this.rootScope.mapCenter = this.center;
      this.rootScope.$apply();
      return this.setLocationPath();
    };

    GMap.prototype.onZoomChange = function() {
      this.rootScope.mapZoom = this.zoom = this.map.getZoom();
      this.rootScope.$apply();
      return this.setLocationPath();
    };

    GMap.prototype.onTypeChange = function() {
      this.mapType = this.map.getMapTypeId();
      switch (this.map.getMapTypeId()) {
        case google.maps.MapTypeId.ROADMAP:
        case google.maps.MapTypeId.HYBRID:
          this.polyOpts = true;
          break;
        default:
          this.polyOpts = true;
      }
      this.rootScope.mapType = this.mapType[0];
      this.rootScope.$apply();
      return this.setLocationPath();
    };

    return GMap;

  })();

  module.factory("GoogleMap", function($rootScope, $location) {
    var SJO, initPosition, initZoom, mapOptions;
    SJO = {
      lat: 9.993552791991132,
      lng: -84.20888416469096
    };
    initPosition = SJO;
    initZoom = 16;
    mapOptions = {
      navBarHeight: 40,
      rootScope: $rootScope,
      location: $location,
      zoom: initZoom,
      mapType: 'm',
      center: {
        lat: initPosition.lat,
        lng: initPosition.lng
      }
    };
    return new GMap(mapOptions);
  });

}).call(this);
